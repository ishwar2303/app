{"ast":null,"code":"import React from 'react';\nimport { Link } from 'react-router-dom';\nimport '../components/css/Signup.css';\nimport InputBottomBorder from './utility/InputBottomBorder';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Signup() {\n  async function postData(url, data) {\n    const response = await fetch(url, {\n      method: 'POST',\n      body: data\n    });\n    return response.json();\n  }\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    let inputBlock = e.target.getElementsByClassName('input-block');\n    let inputs1 = inputBlock[0].getElementsByTagName('input');\n    let inputs2 = inputBlock[1].getElementsByTagName('input');\n    let inputs3 = inputBlock[2].getElementsByTagName('input');\n    let body = new FormData();\n    body.append('firstName', inputs1[0].value);\n    body.append('lastName', inputs1[1].value);\n    body.append('email', inputs2[0].value);\n    body.append('contact', inputs2[1].value);\n    body.append('password', inputs3[0].value);\n    body.append('confirmPassword', inputs3[1].value);\n    postData('http://apiforreact-env.eba-umuhetyq.ap-south-1.elasticbeanstalk.com/Admin/register.php', body).then(data => {\n      populateResponse(data);\n    });\n  };\n\n  const populateResponse = res => {\n    let form = document.getElementById('signup-form');\n    let successBlock = form.getElementsByClassName('form-success')[0];\n    successBlock.style.display = 'none';\n    let errorBlock = form.getElementsByClassName('form-error')[0];\n    errorBlock.style.display = 'none';\n    let success = res.success;\n    let error = res.error;\n    let errorLog = res.errorLog;\n\n    if (success) {\n      successBlock.innerHTML = success;\n      successBlock.style.display = 'block';\n      errorBlock.style.display = 'none';\n      form.reset();\n      resetResponse();\n    } else {\n      errorBlock.innerHTML = error;\n      errorBlock.style.display = 'block';\n      let icon = '<i class=\"fas fa-exclamation-circle\"></i>';\n      let formResponse = form.getElementsByClassName('response');\n      let firstName = errorLog.firstName ? icon + errorLog.firstName : '';\n      let email = errorLog.email ? icon + errorLog.email : '';\n      let contact = errorLog.contact ? icon + errorLog.contact : '';\n      let password = errorLog.password ? icon + errorLog.password : '';\n      let confirmPassword = errorLog.confirmPassword ? icon + errorLog.confirmPassword : '';\n      formResponse[0].innerHTML = firstName;\n      formResponse[2].innerHTML = email;\n      formResponse[3].innerHTML = contact;\n      formResponse[4].innerHTML = password;\n      formResponse[5].innerHTML = confirmPassword;\n    }\n  };\n\n  const handleReset = () => {\n    let form = document.getElementById('signup-form');\n    form.reset();\n  };\n\n  const resetResponse = () => {\n    let form = document.getElementById('add-task-form');\n    let formResponse = form.getElementsByClassName('response');\n\n    for (let i = 0; i < formResponse.length; i++) formResponse[i].innerText = '';\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n}\n\n_c = Signup;\nexport default Signup;\n\nvar _c;\n\n$RefreshReg$(_c, \"Signup\");","map":{"version":3,"sources":["/Volumes/Study/CS/React JS/app/src/components/Signup.js"],"names":["React","Link","InputBottomBorder","Signup","postData","url","data","response","fetch","method","body","json","handleSubmit","e","preventDefault","inputBlock","target","getElementsByClassName","inputs1","getElementsByTagName","inputs2","inputs3","FormData","append","value","then","populateResponse","res","form","document","getElementById","successBlock","style","display","errorBlock","success","error","errorLog","innerHTML","reset","resetResponse","icon","formResponse","firstName","email","contact","password","confirmPassword","handleReset","i","length","innerText"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,IAAR,QAAmB,kBAAnB;AACA,OAAO,8BAAP;AACA,OAAOC,iBAAP,MAA8B,6BAA9B;;;;AAEA,SAASC,MAAT,GAAkB;AAEd,iBAAeC,QAAf,CAAwBC,GAAxB,EAA6BC,IAA7B,EAAmC;AAC/B,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACH,GAAD,EAAM;AAC9BI,MAAAA,MAAM,EAAE,MADsB;AAE9BC,MAAAA,IAAI,EAAEJ;AAFwB,KAAN,CAA5B;AAIA,WAAOC,QAAQ,CAACI,IAAT,EAAP;AACH;;AAED,QAAMC,YAAY,GAAIC,CAAD,IAAO;AACxBA,IAAAA,CAAC,CAACC,cAAF;AACA,QAAIC,UAAU,GAAGF,CAAC,CAACG,MAAF,CAASC,sBAAT,CAAgC,aAAhC,CAAjB;AAEA,QAAIC,OAAO,GAAGH,UAAU,CAAC,CAAD,CAAV,CAAcI,oBAAd,CAAmC,OAAnC,CAAd;AACA,QAAIC,OAAO,GAAGL,UAAU,CAAC,CAAD,CAAV,CAAcI,oBAAd,CAAmC,OAAnC,CAAd;AACA,QAAIE,OAAO,GAAGN,UAAU,CAAC,CAAD,CAAV,CAAcI,oBAAd,CAAmC,OAAnC,CAAd;AAEA,QAAIT,IAAI,GAAG,IAAIY,QAAJ,EAAX;AACAZ,IAAAA,IAAI,CAACa,MAAL,CAAY,WAAZ,EAAyBL,OAAO,CAAC,CAAD,CAAP,CAAWM,KAApC;AACAd,IAAAA,IAAI,CAACa,MAAL,CAAY,UAAZ,EAAwBL,OAAO,CAAC,CAAD,CAAP,CAAWM,KAAnC;AACAd,IAAAA,IAAI,CAACa,MAAL,CAAY,OAAZ,EAAqBH,OAAO,CAAC,CAAD,CAAP,CAAWI,KAAhC;AACAd,IAAAA,IAAI,CAACa,MAAL,CAAY,SAAZ,EAAuBH,OAAO,CAAC,CAAD,CAAP,CAAWI,KAAlC;AACAd,IAAAA,IAAI,CAACa,MAAL,CAAY,UAAZ,EAAwBF,OAAO,CAAC,CAAD,CAAP,CAAWG,KAAnC;AACAd,IAAAA,IAAI,CAACa,MAAL,CAAY,iBAAZ,EAA+BF,OAAO,CAAC,CAAD,CAAP,CAAWG,KAA1C;AAEApB,IAAAA,QAAQ,CAAC,wFAAD,EAA2FM,IAA3F,CAAR,CACCe,IADD,CACMnB,IAAI,IAAI;AACRoB,MAAAA,gBAAgB,CAACpB,IAAD,CAAhB;AACL,KAHD;AAKH,GArBD;;AAuBA,QAAMoB,gBAAgB,GAAIC,GAAD,IAAS;AAC9B,QAAIC,IAAI,GAAGC,QAAQ,CAACC,cAAT,CAAwB,aAAxB,CAAX;AACA,QAAIC,YAAY,GAAEH,IAAI,CAACX,sBAAL,CAA4B,cAA5B,EAA4C,CAA5C,CAAlB;AACAc,IAAAA,YAAY,CAACC,KAAb,CAAmBC,OAAnB,GAA6B,MAA7B;AACA,QAAIC,UAAU,GAAGN,IAAI,CAACX,sBAAL,CAA4B,YAA5B,EAA0C,CAA1C,CAAjB;AACAiB,IAAAA,UAAU,CAACF,KAAX,CAAiBC,OAAjB,GAA2B,MAA3B;AACA,QAAIE,OAAO,GAAGR,GAAG,CAACQ,OAAlB;AACA,QAAIC,KAAK,GAAGT,GAAG,CAACS,KAAhB;AACA,QAAIC,QAAQ,GAAGV,GAAG,CAACU,QAAnB;;AAEA,QAAGF,OAAH,EAAY;AACRJ,MAAAA,YAAY,CAACO,SAAb,GAAyBH,OAAzB;AACAJ,MAAAA,YAAY,CAACC,KAAb,CAAmBC,OAAnB,GAA6B,OAA7B;AACAC,MAAAA,UAAU,CAACF,KAAX,CAAiBC,OAAjB,GAA2B,MAA3B;AACAL,MAAAA,IAAI,CAACW,KAAL;AACAC,MAAAA,aAAa;AAChB,KAND,MAOK;AACDN,MAAAA,UAAU,CAACI,SAAX,GAAuBF,KAAvB;AACAF,MAAAA,UAAU,CAACF,KAAX,CAAiBC,OAAjB,GAA2B,OAA3B;AACA,UAAIQ,IAAI,GAAG,2CAAX;AACA,UAAIC,YAAY,GAAGd,IAAI,CAACX,sBAAL,CAA4B,UAA5B,CAAnB;AACA,UAAI0B,SAAS,GAAGN,QAAQ,CAACM,SAAT,GAAqBF,IAAI,GAAGJ,QAAQ,CAACM,SAArC,GAAiD,EAAjE;AACA,UAAIC,KAAK,GAAGP,QAAQ,CAACO,KAAT,GAAiBH,IAAI,GAAGJ,QAAQ,CAACO,KAAjC,GAAyC,EAArD;AACA,UAAIC,OAAO,GAAGR,QAAQ,CAACQ,OAAT,GAAmBJ,IAAI,GAAGJ,QAAQ,CAACQ,OAAnC,GAA6C,EAA3D;AACA,UAAIC,QAAQ,GAAGT,QAAQ,CAACS,QAAT,GAAoBL,IAAI,GAAGJ,QAAQ,CAACS,QAApC,GAA+C,EAA9D;AACA,UAAIC,eAAe,GAAGV,QAAQ,CAACU,eAAT,GAA2BN,IAAI,GAAGJ,QAAQ,CAACU,eAA3C,GAA6D,EAAnF;AACAL,MAAAA,YAAY,CAAC,CAAD,CAAZ,CAAgBJ,SAAhB,GAA4BK,SAA5B;AACAD,MAAAA,YAAY,CAAC,CAAD,CAAZ,CAAgBJ,SAAhB,GAA4BM,KAA5B;AACAF,MAAAA,YAAY,CAAC,CAAD,CAAZ,CAAgBJ,SAAhB,GAA4BO,OAA5B;AACAH,MAAAA,YAAY,CAAC,CAAD,CAAZ,CAAgBJ,SAAhB,GAA4BQ,QAA5B;AACAJ,MAAAA,YAAY,CAAC,CAAD,CAAZ,CAAgBJ,SAAhB,GAA4BS,eAA5B;AACH;AACJ,GAjCD;;AAmCA,QAAMC,WAAW,GAAG,MAAM;AACtB,QAAIpB,IAAI,GAAGC,QAAQ,CAACC,cAAT,CAAwB,aAAxB,CAAX;AACAF,IAAAA,IAAI,CAACW,KAAL;AACH,GAHD;;AAKA,QAAMC,aAAa,GAAG,MAAM;AACxB,QAAIZ,IAAI,GAAGC,QAAQ,CAACC,cAAT,CAAwB,eAAxB,CAAX;AACA,QAAIY,YAAY,GAAGd,IAAI,CAACX,sBAAL,CAA4B,UAA5B,CAAnB;;AACA,SAAI,IAAIgC,CAAC,GAAC,CAAV,EAAaA,CAAC,GAACP,YAAY,CAACQ,MAA5B,EAAoCD,CAAC,EAArC,EACIP,YAAY,CAACO,CAAD,CAAZ,CAAgBE,SAAhB,GAA4B,EAA5B;AACP,GALD;;AAOA,sBACI,qCADJ;AAIH;;KApFQhD,M;AAsFT,eAAeA,MAAf","sourcesContent":["import React from 'react'\nimport {Link} from 'react-router-dom'\nimport '../components/css/Signup.css'\nimport InputBottomBorder from './utility/InputBottomBorder';\n\nfunction Signup() {\n    \n    async function postData(url, data) {\n        const response = await fetch(url, {\n            method: 'POST',\n            body: data \n          });\n        return response.json(); \n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        let inputBlock = e.target.getElementsByClassName('input-block');\n        \n        let inputs1 = inputBlock[0].getElementsByTagName('input');\n        let inputs2 = inputBlock[1].getElementsByTagName('input');\n        let inputs3 = inputBlock[2].getElementsByTagName('input');\n\n        let body = new FormData;\n        body.append('firstName', inputs1[0].value);\n        body.append('lastName', inputs1[1].value);\n        body.append('email', inputs2[0].value);\n        body.append('contact', inputs2[1].value);\n        body.append('password', inputs3[0].value);\n        body.append('confirmPassword', inputs3[1].value);\n        \n        postData('http://apiforreact-env.eba-umuhetyq.ap-south-1.elasticbeanstalk.com/Admin/register.php', body)\n        .then(data => {\n              populateResponse(data)\n        });\n\n    }\n\n    const populateResponse = (res) => {\n        let form = document.getElementById('signup-form');\n        let successBlock =form.getElementsByClassName('form-success')[0];\n        successBlock.style.display = 'none';\n        let errorBlock = form.getElementsByClassName('form-error')[0];\n        errorBlock.style.display = 'none';\n        let success = res.success;\n        let error = res.error;\n        let errorLog = res.errorLog;\n\n        if(success) {\n            successBlock.innerHTML = success;\n            successBlock.style.display = 'block';\n            errorBlock.style.display = 'none';\n            form.reset();\n            resetResponse();\n        }\n        else {\n            errorBlock.innerHTML = error;\n            errorBlock.style.display = 'block';\n            let icon = '<i class=\"fas fa-exclamation-circle\"></i>';\n            let formResponse = form.getElementsByClassName('response');\n            let firstName = errorLog.firstName ? icon + errorLog.firstName : '';\n            let email = errorLog.email ? icon + errorLog.email : '';\n            let contact = errorLog.contact ? icon + errorLog.contact : '';\n            let password = errorLog.password ? icon + errorLog.password : '';\n            let confirmPassword = errorLog.confirmPassword ? icon + errorLog.confirmPassword : '';\n            formResponse[0].innerHTML = firstName;\n            formResponse[2].innerHTML = email;\n            formResponse[3].innerHTML = contact;\n            formResponse[4].innerHTML = password;\n            formResponse[5].innerHTML = confirmPassword;\n        }\n    }\n  \n    const handleReset = () => {\n        let form = document.getElementById('signup-form');\n        form.reset();\n    }\n\n    const resetResponse = () => {\n        let form = document.getElementById('add-task-form');\n        let formResponse = form.getElementsByClassName('response');\n        for(let i=0; i<formResponse.length; i++)\n            formResponse[i].innerText = '';\n    }\n\n    return (\n        <>\n        </>\n    )\n}\n\nexport default Signup\n"]},"metadata":{},"sourceType":"module"}