{"ast":null,"code":"var _jsxFileName = \"/Volumes/Study/CS/React JS/app/src/components/graphs/TaskShareGraph.js\";\nimport React from 'react';\nimport Highcharts from 'highcharts';\nimport Loading from '../utility/Loading';\nimport CustomRadio from '../utility/CustomRadio';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction TaskGraph() {\n  var control = true;\n\n  async function getData(url) {\n    const response = await fetch(url, {\n      method: 'GET'\n    });\n    return response.json();\n  }\n\n  const loadChart = () => {\n    var URL = 'http://localhost/API/Admin/fetch-task-share.php?status=';\n    let filter = document.getElementsByName('status1');\n\n    for (let i = 0; i < filter.length; i++) {\n      if (filter[i].checked) {\n        URL += filter[i].value;\n        break;\n      }\n    }\n\n    getData(URL).then(data => {\n      renderChart([data.data]);\n    });\n  };\n\n  const renderChart = data => {\n    // Build the chart\n    Highcharts.chart('graph-1', {\n      chart: {\n        plotBackgroundColor: null,\n        plotBorderWidth: null,\n        plotShadow: false,\n        type: 'pie'\n      },\n      title: {\n        text: 'Analyst task completion share'\n      },\n      tooltip: {\n        pointFormat: '{series.name}: <b>{point.y} <i class=\"fas fa-rupee-sign\"></i></b>'\n      },\n      accessibility: {\n        point: {\n          valueSuffix: '%'\n        }\n      },\n      plotOptions: {\n        pie: {\n          allowPointSelect: true,\n          cursor: 'pointer',\n          dataLabels: {\n            enabled: true,\n            format: '<b>{point.name}</b>: {point.percentage:.1f} %',\n            connectorColor: 'silver'\n          }\n        }\n      },\n      credits: {\n        enabled: false\n      },\n      series: data\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"graph-1\",\n      children: /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-block\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"customized-radio-black\",\n        children: [/*#__PURE__*/_jsxDEV(CustomRadio, {\n          value: \"Completed\",\n          text: \"Completed\",\n          name: \"status1\",\n          icon: \"fas fa-check\",\n          checked: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(CustomRadio, {\n          value: \"Pending\",\n          text: \"Pending\",\n          name: \"status1\",\n          icon: \"fas fa-box-open\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(CustomRadio, {\n          value: \"*\",\n          text: \"Accumulated\",\n          name: \"status1\",\n          icon: \"fas fa-box\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-row jc-e\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary btn-medium\",\n        onClick: loadChart,\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-sync\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 84\n        }, this), \" Refresh\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }, this), loadChart()]\n  }, void 0, true);\n}\n\n_c = TaskGraph;\nexport default TaskGraph;\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskGraph\");","map":{"version":3,"sources":["/Volumes/Study/CS/React JS/app/src/components/graphs/TaskShareGraph.js"],"names":["React","Highcharts","Loading","CustomRadio","TaskGraph","control","getData","url","response","fetch","method","json","loadChart","URL","filter","document","getElementsByName","i","length","checked","value","then","data","renderChart","chart","plotBackgroundColor","plotBorderWidth","plotShadow","type","title","text","tooltip","pointFormat","accessibility","point","valueSuffix","plotOptions","pie","allowPointSelect","cursor","dataLabels","enabled","format","connectorColor","credits","series"],"mappings":"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","sourcesContent":["import React from 'react'\nimport Highcharts from 'highcharts';\nimport Loading from '../utility/Loading';\nimport CustomRadio from '../utility/CustomRadio';\n\n\nfunction TaskGraph() {\n\n    var control = true;\n\n    async function getData(url) {\n        const response = await fetch(url, {\n            method: 'GET'\n        });\n        return response.json(); \n    }\n\n    const loadChart = () => {\n        var URL = 'http://localhost/API/Admin/fetch-task-share.php?status=';\n        let filter = document.getElementsByName('status1');\n        for(let i=0; i<filter.length; i++) {\n            if(filter[i].checked) {\n                URL += filter[i].value;\n                break;\n            }\n        }\n        getData(URL)\n        .then(data => {\n            renderChart([data.data])\n        });\n    }\n\n    \n    const renderChart = (data) => {\n\n        // Build the chart\n        Highcharts.chart('graph-1', {\n            chart: {\n                plotBackgroundColor: null,\n                plotBorderWidth: null,\n                plotShadow: false,\n                type: 'pie'\n            },\n            title: {\n                text: 'Analyst task completion share'\n            },\n            tooltip: {\n                pointFormat: '{series.name}: <b>{point.y} <i class=\"fas fa-rupee-sign\"></i></b>'\n            },\n            accessibility: {\n                point: {\n                    valueSuffix: '%'\n                }\n            },\n            plotOptions: {\n                pie: {\n                    allowPointSelect: true,\n                    cursor: 'pointer',\n                    dataLabels: {\n                        enabled: true,\n                        format: '<b>{point.name}</b>: {point.percentage:.1f} %',\n                        connectorColor: 'silver'\n                    }\n                }\n            },\n            credits: {\n                enabled: false\n            },\n            series: data\n        });\n    }\n    return (\n        <>\n            <div id=\"graph-1\">\n                <Loading />\n            </div>\n            <div className='input-block'>\n                <div className='customized-radio-black'>\n                    <CustomRadio \n                        value='Completed' \n                        text='Completed'\n                        name='status1'\n                        icon='fas fa-check'\n                        checked={true}\n                    />\n                    <CustomRadio \n                        value='Pending' \n                        text='Pending'\n                        name='status1'\n                        icon='fas fa-box-open'\n                    />\n                    <CustomRadio \n                        value='*' \n                        text='Accumulated'\n                        name='status1'\n                        icon='fas fa-box'\n                    />\n                </div> \n            </div>\n            <div className='flex-row jc-e'>\n                <button className='btn btn-primary btn-medium' onClick={loadChart}><i className='fas fa-sync'/> Refresh</button>\n            </div>\n            {loadChart()}\n        </>\n    )\n}\n\nexport default TaskGraph\n"]},"metadata":{},"sourceType":"module"}