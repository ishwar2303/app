{"ast":null,"code":"var _jsxFileName = \"/Volumes/Study/CS/React JS/app/src/components/graphs/TaskGraph.js\";\nimport React from 'react';\nimport Highcharts from 'highcharts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction TaskGraph() {\n  async function postData(url) {\n    const response = await fetch(url, {\n      method: 'GET'\n    });\n    return response.json();\n  }\n\n  postData('http://localhost/API/Admin/fetch-task-share.php').then(data => {\n    loadChart([data.data]);\n  });\n\n  const loadChart = data => {\n    // Radialize the colors\n    Highcharts.setOptions({\n      colors: Highcharts.map(Highcharts.getOptions().colors, function (color) {\n        return {\n          radialGradient: {\n            cx: 0.5,\n            cy: 0.3,\n            r: 0.7\n          },\n          stops: [[0, color], [1, Highcharts.color(color).brighten(-0.3).get('rgb')] // darken\n          ]\n        };\n      })\n    }); // Build the chart\n\n    Highcharts.chart('graph-1', {\n      chart: {\n        plotBackgroundColor: null,\n        plotBorderWidth: null,\n        plotShadow: false,\n        type: 'pie'\n      },\n      title: {\n        text: 'Analyst task completion share'\n      },\n      tooltip: {\n        pointFormat: '{series.name}: <b>{point.percentage:.1f}%</b>'\n      },\n      accessibility: {\n        point: {\n          valueSuffix: '%'\n        }\n      },\n      plotOptions: {\n        pie: {\n          allowPointSelect: true,\n          cursor: 'pointer',\n          dataLabels: {\n            enabled: true,\n            format: '<b>{point.name}</b>: {point.percentage:.1f} %',\n            connectorColor: 'silver'\n          }\n        }\n      },\n      credits: {\n        enabled: false\n      },\n      series: data\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"graph-1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-block\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"customized-radio-black\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            value: \"Completed\",\n            name: \"status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"\",\n            children: \"Completed\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            value: \"Pending\",\n            name: \"status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Pending\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-row jc-e\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary btn-medium\",\n        onClick: loadChart,\n        children: \"LoadChart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_c = TaskGraph;\nexport default TaskGraph;\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskGraph\");","map":{"version":3,"sources":["/Volumes/Study/CS/React JS/app/src/components/graphs/TaskGraph.js"],"names":["React","Highcharts","TaskGraph","postData","url","response","fetch","method","json","then","data","loadChart","setOptions","colors","map","getOptions","color","radialGradient","cx","cy","r","stops","brighten","get","chart","plotBackgroundColor","plotBorderWidth","plotShadow","type","title","text","tooltip","pointFormat","accessibility","point","valueSuffix","plotOptions","pie","allowPointSelect","cursor","dataLabels","enabled","format","connectorColor","credits","series"],"mappings":"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","sourcesContent":["import React from 'react'\nimport Highcharts from 'highcharts';\nfunction TaskGraph() {\n\n\n    async function postData(url) {\n        const response = await fetch(url, {\n            method: 'GET'\n          });\n        return response.json(); \n    }\n\n\n    postData('http://localhost/API/Admin/fetch-task-share.php')\n    .then(data => {\n        loadChart([data.data])\n    });\n\n    const loadChart = (data) => {\n        // Radialize the colors\n        Highcharts.setOptions({\n            colors: Highcharts.map(Highcharts.getOptions().colors, function (color) {\n                return {\n                    radialGradient: {\n                        cx: 0.5,\n                        cy: 0.3,\n                        r: 0.7\n                    },\n                    stops: [\n                        [0, color],\n                        [1, Highcharts.color(color).brighten(-0.3).get('rgb')] // darken\n                    ]\n                };\n            })\n        });\n    \n        // Build the chart\n        Highcharts.chart('graph-1', {\n            chart: {\n                plotBackgroundColor: null,\n                plotBorderWidth: null,\n                plotShadow: false,\n                type: 'pie'\n            },\n            title: {\n                text: 'Analyst task completion share'\n            },\n            tooltip: {\n                pointFormat: '{series.name}: <b>{point.percentage:.1f}%</b>'\n            },\n            accessibility: {\n                point: {\n                    valueSuffix: '%'\n                }\n            },\n            plotOptions: {\n                pie: {\n                    allowPointSelect: true,\n                    cursor: 'pointer',\n                    dataLabels: {\n                        enabled: true,\n                        format: '<b>{point.name}</b>: {point.percentage:.1f} %',\n                        connectorColor: 'silver'\n                    }\n                }\n            },\n            credits: {\n                enabled: false\n            },\n            series: data\n        });\n    }\n    return (\n        <>\n            <div id=\"graph-1\">\n            </div>\n            <div className='input-block'>\n                <div className='customized-radio-black'>\n                    <label>\n                        <input type=\"radio\" value=\"Completed\" name=\"status\" />\n                        <span className=''>Completed</span>\n                    </label>\n                    <label>\n                        <input type=\"radio\" value=\"Pending\" name=\"status\" />\n                        <span>Pending</span>\n                    </label>\n                </div>\n            </div>\n            <div className='flex-row jc-e'>\n                <button className='btn btn-primary btn-medium' onClick={loadChart}>LoadChart</button>\n            </div>\n        </>\n    )\n}\n\nexport default TaskGraph\n"]},"metadata":{},"sourceType":"module"}