{"ast":null,"code":"var _jsxFileName = \"/Volumes/Study/CS/React JS/app/src/components/graphs/TaskGraph.js\";\nimport React from 'react';\nimport Highcharts from 'highcharts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction TaskGraph() {\n  const loadChart = () => {\n    // Radialize the colors\n    Highcharts.setOptions({\n      colors: Highcharts.map(Highcharts.getOptions().colors, function (color) {\n        return {\n          radialGradient: {\n            cx: 0.5,\n            cy: 0.3,\n            r: 0.7\n          },\n          stops: [[0, color], [1, Highcharts.color(color).brighten(-0.3).get('rgb')] // darken\n          ]\n        };\n      })\n    }); // Build the chart\n\n    Highcharts.chart('graph-1', {\n      chart: {\n        plotBackgroundColor: null,\n        plotBorderWidth: null,\n        plotShadow: false,\n        type: 'pie'\n      },\n      title: {\n        text: 'Analyst task completion Share'\n      },\n      tooltip: {\n        pointFormat: '{series.name}: <b>{point.percentage:.1f}%</b>'\n      },\n      accessibility: {\n        point: {\n          valueSuffix: '%'\n        }\n      },\n      plotOptions: {\n        pie: {\n          allowPointSelect: true,\n          cursor: 'pointer',\n          dataLabels: {\n            enabled: true,\n            format: '<b>{point.name}</b>: {point.percentage:.1f} %',\n            connectorColor: 'silver'\n          }\n        }\n      },\n      credits: {\n        enabled: false\n      },\n      series: [{\n        name: 'Share',\n        data: [{\n          name: 'Chrome',\n          y: 61.41\n        }, {\n          name: 'Internet Explorer',\n          y: 11.84\n        }, {\n          name: 'Firefox',\n          y: 10.85\n        }, {\n          name: 'Edge',\n          y: 4.67\n        }, {\n          name: 'Safari',\n          y: 4.18\n        }, {\n          name: 'Other',\n          y: 7.05\n        }]\n      }]\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"graph-1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-row jc-e\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary btn-medium\",\n        onClick: loadChart,\n        children: \"LoadChart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_c = TaskGraph;\nexport default TaskGraph;\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskGraph\");","map":{"version":3,"sources":["/Volumes/Study/CS/React JS/app/src/components/graphs/TaskGraph.js"],"names":["React","Highcharts","TaskGraph","loadChart","setOptions","colors","map","getOptions","color","radialGradient","cx","cy","r","stops","brighten","get","chart","plotBackgroundColor","plotBorderWidth","plotShadow","type","title","text","tooltip","pointFormat","accessibility","point","valueSuffix","plotOptions","pie","allowPointSelect","cursor","dataLabels","enabled","format","connectorColor","credits","series","name","data","y"],"mappings":"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","sourcesContent":["import React from 'react'\nimport Highcharts from 'highcharts';\nfunction TaskGraph() {\n\n    const loadChart = () => {\n        // Radialize the colors\n        Highcharts.setOptions({\n            colors: Highcharts.map(Highcharts.getOptions().colors, function (color) {\n                return {\n                    radialGradient: {\n                        cx: 0.5,\n                        cy: 0.3,\n                        r: 0.7\n                    },\n                    stops: [\n                        [0, color],\n                        [1, Highcharts.color(color).brighten(-0.3).get('rgb')] // darken\n                    ]\n                };\n            })\n        });\n    \n        // Build the chart\n        Highcharts.chart('graph-1', {\n            chart: {\n                plotBackgroundColor: null,\n                plotBorderWidth: null,\n                plotShadow: false,\n                type: 'pie'\n            },\n            title: {\n                text: 'Analyst task completion Share'\n            },\n            tooltip: {\n                pointFormat: '{series.name}: <b>{point.percentage:.1f}%</b>'\n            },\n            accessibility: {\n                point: {\n                    valueSuffix: '%'\n                }\n            },\n            plotOptions: {\n                pie: {\n                    allowPointSelect: true,\n                    cursor: 'pointer',\n                    dataLabels: {\n                        enabled: true,\n                        format: '<b>{point.name}</b>: {point.percentage:.1f} %',\n                        connectorColor: 'silver'\n                    }\n                }\n            },\n            credits: {\n                enabled: false\n            },\n            series: [{\n                name: 'Share',\n                data: [\n                    { name: 'Chrome', y: 61.41 },\n                    { name: 'Internet Explorer', y: 11.84 },\n                    { name: 'Firefox', y: 10.85 },\n                    { name: 'Edge', y: 4.67 },\n                    { name: 'Safari', y: 4.18 },\n                    { name: 'Other', y: 7.05 }\n                ]\n            }]\n        });\n    }\n    return (\n        <>\n            <div id=\"graph-1\">\n            </div>\n            <div className='flex-row jc-e'>\n                <button className='btn btn-primary btn-medium' onClick={loadChart}>LoadChart</button>\n            </div>\n        </>\n    )\n}\n\nexport default TaskGraph\n"]},"metadata":{},"sourceType":"module"}