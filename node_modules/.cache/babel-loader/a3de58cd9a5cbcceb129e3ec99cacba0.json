{"ast":null,"code":"var _jsxFileName = \"/Volumes/Study/CS/React JS/app/src/components/graphs/CollectionBarGraph.js\";\nimport React from 'react';\nimport Highcharts from 'highcharts';\nimport crossfilter from 'crossfilter';\nimport Loading from '../utility/Loading';\nimport CustomRadio from '../utility/CustomRadio';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction CollectionBarGraph() {\n  var chartData = [];\n\n  async function getData(url) {\n    const response = await fetch(url, {\n      method: 'GET'\n    });\n    return response.json();\n  }\n\n  function reduceAdd(p, v, nf) {\n    p.data.push(v.amount);\n    return p;\n  }\n\n  function reduceRemove(p, v, nf) {\n    p.data.pop();\n    return p;\n  }\n\n  function reduceInitial() {\n    return {\n      data: []\n    };\n  }\n\n  const prepareData = data => {\n    let cf = crossfilter(data);\n    cf.dimension(d => {\n      return d.status;\n    }).filter(\"Completed\");\n    let analystDim = cf.dimension(d => {\n      return d.analyst;\n    });\n    let series = analystDim.group().reduceSum(d => {\n      return d.amount;\n    }).all();\n    series.sort((a, b) => {\n      return b.value - a.value;\n    });\n    let seriesData = {\n      name: 'Analyst',\n      data: []\n    };\n    let categories = [];\n\n    for (let i = 0; i < series.length && i < 5; i++) {\n      categories.push(series[i].key);\n      seriesData.data.push(series[i].value);\n    }\n\n    return {\n      categories,\n      seriesData: [seriesData]\n    };\n  };\n\n  const loadChart = () => {\n    var URL = 'http://apiforreact-env.eba-umuhetyq.ap-south-1.elasticbeanstalk.com/Admin/fetch-task-performance.php';\n    getData(URL).then(data => {\n      chartData = data.data;\n      data = prepareData(data.data);\n      console.log(data);\n      renderChart(data.seriesData, data.categories);\n    });\n  };\n\n  const updateChart = () => {\n    let data = prepareData(chartData);\n    renderChart(data);\n  };\n\n  const renderChart = (data, dataCategories) => {\n    Highcharts.chart('graph-3', {\n      chart: {\n        type: 'bar'\n      },\n      title: {\n        text: 'Top analyst by collection'\n      },\n      subtitle: {\n        text: null\n      },\n      xAxis: {\n        labels: {\n          align: 'right',\n          x: '0px',\n          y: 0,\n          style: {\n            color: 'blue'\n          }\n        },\n        categories: dataCategories,\n        title: {\n          text: null\n        }\n      },\n      yAxis: {\n        min: 0,\n        title: {\n          text: 'Amount',\n          align: 'high'\n        },\n        labels: {\n          overflow: 'justify',\n          rotation: 45\n        }\n      },\n      tooltip: {\n        formatter: function () {\n          return '<b>' + this.x + '</b>' + '<br/>' + this.y + ' $';\n        },\n        valueSuffix: ' $'\n      },\n      plotOptions: {\n        bar: {\n          dataLabels: {\n            enabled: true\n          }\n        }\n      },\n      legend: {\n        enabled: false\n      },\n      credits: {\n        enabled: false\n      },\n      series: data\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"graph-3\",\n      children: /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-row jc-e\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary btn-medium\",\n        onClick: loadChart,\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-sync\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 84\n        }, this), \" Refresh\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 13\n    }, this), loadChart()]\n  }, void 0, true);\n}\n\n_c = CollectionBarGraph;\nexport default CollectionBarGraph;\n\nvar _c;\n\n$RefreshReg$(_c, \"CollectionBarGraph\");","map":{"version":3,"sources":["/Volumes/Study/CS/React JS/app/src/components/graphs/CollectionBarGraph.js"],"names":["React","Highcharts","crossfilter","Loading","CustomRadio","CollectionBarGraph","chartData","getData","url","response","fetch","method","json","reduceAdd","p","v","nf","data","push","amount","reduceRemove","pop","reduceInitial","prepareData","cf","dimension","d","status","filter","analystDim","analyst","series","group","reduceSum","all","sort","a","b","value","seriesData","name","categories","i","length","key","loadChart","URL","then","console","log","renderChart","updateChart","dataCategories","chart","type","title","text","subtitle","xAxis","labels","align","x","y","style","color","yAxis","min","overflow","rotation","tooltip","formatter","valueSuffix","plotOptions","bar","dataLabels","enabled","legend","credits"],"mappings":"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","sourcesContent":["import React from 'react'\nimport Highcharts from 'highcharts';\nimport crossfilter from 'crossfilter';\nimport Loading from '../utility/Loading';\nimport CustomRadio from '../utility/CustomRadio';\n\nfunction CollectionBarGraph() {\n    var chartData = [];\n\n    async function getData(url) {\n        const response = await fetch(url, {\n            method: 'GET'\n        });\n        return response.json(); \n    }\n\n    function reduceAdd(p, v, nf) {\n        p.data.push(v.amount);\n        return p;\n    }\n\n    function reduceRemove(p, v, nf) {\n        p.data.pop();\n        return p;\n    }\n\n    function reduceInitial() {\n        return {data: []};\n    }\n\n    const prepareData = (data) => {\n        let cf = crossfilter(data);\n\n        cf.dimension((d) => {return d.status}).filter(\"Completed\");\n        \n\n        let analystDim = cf.dimension((d) => {return d.analyst});\n\n        let series = analystDim.group().reduceSum((d) => {return d.amount}).all();\n        \n        series.sort((a, b) => {\n            return b.value - a.value;\n        });\n\n        let seriesData = {\n            name: 'Analyst',\n            data: []\n        };\n\n        let categories = [];\n        for(let i=0; i<series.length && i<5; i++)\n        {\n            categories.push(series[i].key);\n            seriesData.data.push(series[i].value);\n        }\n        \n        return {\n            categories,\n            seriesData: [seriesData]\n        }\n    }\n\n    const loadChart = () => {\n        var URL = 'http://apiforreact-env.eba-umuhetyq.ap-south-1.elasticbeanstalk.com/Admin/fetch-task-performance.php';\n        \n\n        getData(URL)\n        .then(data => {\n            chartData = data.data;\n            data = prepareData(data.data);\n            console.log(data);\n            renderChart(data.seriesData, data.categories);\n            \n        });\n    }\n\n\n    const updateChart = () => {\n        let data = prepareData(chartData);\n        renderChart(data);\n    }\n\n    const renderChart = (data, dataCategories) => {\n        Highcharts.chart('graph-3', {\n            chart: {\n                type: 'bar'\n            },\n            title: {\n                text: 'Top analyst by collection'\n            },\n            subtitle: {\n                text: null\n            },\n            xAxis: {\n                labels: {\n                    align: 'right',\n                    x: '0px',\n                    y: 0,\n                    style: {\n                        color: 'blue',\n                    }\n                },\n                categories: dataCategories,\n                title: {\n                    text: null\n                }\n            },\n            yAxis: {\n                min: 0,\n                title: {\n                    text: 'Amount',\n                    align: 'high',\n                },\n                labels: {\n                    overflow: 'justify',\n                    rotation: 45\n                }\n            },\n            tooltip: {\n                formatter: function() {\n                    return '<b>' + this.x + '</b>' + '<br/>' + this.y + ' $';\n                },\n                valueSuffix: ' $'\n            },\n            plotOptions: {\n                bar: {\n                    dataLabels: {\n                        enabled: true\n                    }\n                }\n            },\n            legend: {\n                enabled: false\n            },\n            credits: {\n                enabled: false\n            },\n            series: data\n        });\n    }\n    \n    return (\n        <>\n            <div id=\"graph-3\">\n                <Loading />\n            </div>\n            <div className='flex-row jc-e'>\n                <button className='btn btn-primary btn-medium' onClick={loadChart}><i className='fas fa-sync'/> Refresh</button>\n            </div>\n            {loadChart()}\n        </>\n    )\n}\n\nexport default CollectionBarGraph\n"]},"metadata":{},"sourceType":"module"}